/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package anhnt.ui;

import anhnt.daos.MyLog;
import anhnt.daos.SupplierDAO;
import anhnt.daos.UserDAO;
import anhnt.dtos.SupplierDTO;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author TRUNG ANH
 */
public class SupplierPanel extends javax.swing.JPanel {
    private final String LOG_NAME = "mylog.txt";
    /**
     * Creates new form SupplierPanel
     */
    int pos = -1;
    Vector<SupplierDTO> list;
    public SupplierPanel() {
        initComponents();
        loadSupplier();
        btnSave.setEnabled(false);
        setDisable();
    }
    
    public void loadSupplier(){
        Vector header = new Vector();
        header.add("Code");
        header.add("Name");
        header.add("Address");
        list = SupplierDAO.getSuppliers();
        Vector data = new Vector();
        if(list != null){
            for (SupplierDTO obj : list){
                Vector row = new Vector();
                row.add(obj.getSupCode());
                row.add(obj.getSupName());
                row.add(obj.getAddress());
                data.add(row);
            }
        }
        DefaultTableModel model = (DefaultTableModel) tblSupplier.getModel();
        model.setDataVector(data, header);
    }
    
    private void setEnable(){
        txtCode.setEnabled(true);
        txtName.setEnabled(true);
        txtAddress.setEnabled(true);
        checkBox.setEnabled(true);
        
    }
    
    private void setDisable(){
        txtCode.setEnabled(false);
        txtName.setEnabled(false);
        txtAddress.setEnabled(false);
        checkBox.setEnabled(false);
    }
    
    private void clearText(){
        txtCode.setText("");
        txtName.setText("");
        txtAddress.setText("");
        checkBox.setSelected(false);
    }
    
     private void updateNewSupplier(String code, String name, String address, boolean collaborating) throws SQLException, ClassNotFoundException{
         
         String sql = "Update tblSuppliers "
                 + "Set supName = '"+name+"', address = '"+address+"', collaborating = '"+collaborating+"' "
                 + "Where supCode = '"+code+"'";
        int result = anhnt.daos.UserDAO.doRecord(sql);
        loadSupplier();
        tblSupplier.updateUI();
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblSupplier = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        checkBox = new javax.swing.JCheckBox();
        btnAddNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        tblSupplier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSupplier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSupplierMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblSupplierMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblSupplier);
        if (tblSupplier.getColumnModel().getColumnCount() > 0) {
            tblSupplier.getColumnModel().getColumn(0).setResizable(false);
            tblSupplier.getColumnModel().getColumn(1).setResizable(false);
            tblSupplier.getColumnModel().getColumn(2).setResizable(false);
            tblSupplier.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel1.setText("Code");

        jLabel2.setText("Name");

        jLabel3.setText("Address");

        jLabel4.setText("Collaborating");

        btnAddNew.setText("Add New");
        btnAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtName)
                            .addComponent(txtCode)
                            .addComponent(txtAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAddNew, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(checkBox)))
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(checkBox))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddNew)
                            .addComponent(btnSave)
                            .addComponent(btnDelete)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblSupplierMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSupplierMouseReleased
        // TODO add your handling code here:
        pos = tblSupplier.getSelectedRow();
    }//GEN-LAST:event_tblSupplierMouseReleased

    private void tblSupplierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSupplierMouseClicked
        // TODO add your handling code here:
        list = SupplierDAO.getSuppliers();
        int row = tblSupplier.getSelectedRow();
        txtCode.setText("" + list.get(row).getSupCode());
        txtName.setText("" + list.get(row).getSupName());
        txtAddress.setText("" + list.get(row).getAddress());
        checkBox.setSelected(list.get(row).isCollaborating());
        setEnable();
        txtCode.setEnabled(false);
        btnAddNew.setEnabled(true);
        btnSave.setEnabled(true);
        btnDelete.setEnabled(true);
       
    }//GEN-LAST:event_tblSupplierMouseClicked

    private void btnAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewActionPerformed
        // TODO add your handling code here:
           pos = -1;
           setEnable();
           clearText();
           tblSupplier.clearSelection();
           btnSave.setEnabled(true);
           btnDelete.setEnabled(false);
    }//GEN-LAST:event_btnAddNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        String sql = "";
        String code = txtCode.getText().trim().replaceAll("//s+", " ");
        String name = txtName.getText().trim().replaceAll("//s+", " ");
        String address = txtAddress.getText().trim().replaceAll("//s+", " ");
        boolean collaborating = checkBox.isSelected();
        if(pos == -1){ //add new
            try {
                if(!name.isEmpty() && !address.isEmpty() && !code.isEmpty()){
                    sql = "INSERT tblSuppliers(supCode, supName, address, collaborating)\n" +
                          "VALUES('"+code+"', '"+name+"', '"+address+"', '"+collaborating+"')";
                    int result = UserDAO.doRecord(sql);
                    if(result != 0){
                        JOptionPane.showMessageDialog(null, "Save sucessfully");
                        loadSupplier();
                        clearText();
                        setEnable();
                    }
                }else if(name.isEmpty() && !address.isEmpty()){
                    JOptionPane.showMessageDialog(null, "Please fill out name of supplier");
                    txtName.requestFocus();
                }else if(!name.isEmpty() && address.isEmpty()){
                    JOptionPane.showMessageDialog(null, "Please fill out address of supplier");
                    txtAddress.requestFocus();
                }else if(name.isEmpty() && address.isEmpty() && !code.isEmpty()){
                    JOptionPane.showMessageDialog(null, "Please fill out address of supplier and name of supplier");
                    txtName.requestFocus();
                }else{
                    JOptionPane.showMessageDialog(null, "Please fill out full infomation of supplier");
                }
            } catch (Exception e) {
                if(e.getMessage().contains("duplicate key")){
                    JOptionPane.showMessageDialog(null, "The code of supplier is duplicate");
                }
            }
        }else{
            try {
                if(!name.isEmpty() && !address.isEmpty()){
                    updateNewSupplier(code, name, address, collaborating);
                    clearText();
                    setEnable();
                }else{
                    JOptionPane.showMessageDialog(null, "Please fill out full infomation of item");
                }
            } catch (Exception e) {
                MyLog.writeLog(e.getMessage(), LOG_NAME);
                JOptionPane.showMessageDialog(null, e);
            }
        }
        
        
        
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
       
            if(pos >= 0){
                String[] options = {"Accept", "Cancel"};
                int ans = JOptionPane.showOptionDialog(null, "Are you sure to delete", "Alert!", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
                if(ans == 0){
                    try {
                        String sql = "DELETE tblSuppliers\n" +
                                     "WHERE supCode = '"+txtCode.getText()+"'";
                        int result = UserDAO.doRecord(sql);
                        if(result != 0){
                            JOptionPane.showMessageDialog(null, "Deleted successfully");
                            pos = -1;
                            tblSupplier.clearSelection();
                            clearText();
                            loadSupplier();
                            txtCode.setEnabled(true);
                            btnAddNew.setEnabled(true);
                            btnSave.setEnabled(true);
                            btnDelete.setEnabled(true);
                        }
                    } catch (Exception e) {
                        if(e.getMessage().contains("The DELETE statement conflicted with the REFERENCE")){
                            MyLog.writeLog(e.getMessage(), LOG_NAME);
                            String name = (String) tblSupplier.getValueAt(pos, 1);
                            JOptionPane.showMessageDialog(null, "Supplier \""+name+"\" has at least 1 product."
                                                                + "\nPlease remove all related product relate before deleting supplier.");
                        }
                    }
                }
            }else JOptionPane.showMessageDialog(null, "Please choose supplier");
        
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNew;
    public javax.swing.JButton btnDelete;
    public javax.swing.JButton btnSave;
    private javax.swing.JCheckBox checkBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSupplier;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
