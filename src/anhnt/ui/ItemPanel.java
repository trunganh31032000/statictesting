/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package anhnt.ui;

import anhnt.daos.ItemDAO;
import anhnt.daos.MyLog;
import anhnt.daos.SupplierDAO;
import anhnt.daos.UserDAO;
import anhnt.dtos.ItemDTO;
import anhnt.dtos.SupplierDTO;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author TRUNG ANH
 */
public class ItemPanel extends javax.swing.JPanel {
     private final String LOG_NAME = "mylog.txt";
    /**
     * Creates new form ItemPanel
     */
    int flag = -1;
    int pos = -1;
    Vector<ItemDTO> listItem;
    Vector<String> listSupplier;
    Vector<String> listCodeOfSupplier;
    public ItemPanel() {
        initComponents();
        loadItem();
        btnSave.setEnabled(false);
        loadCbxSupplier();
        setDisable();
    }
    
    public void loadItem(){
        Vector header = new Vector();
        header.add("Code");
        header.add("Name");
        header.add("Supplier");
        header.add("Unit");
        header.add("Price");
        header.add("Supply");
        listItem = ItemDAO.getItems();
        Vector data = new Vector();
        if(listItem != null){
            for (ItemDTO obj : listItem){
                Vector row = new Vector();
                row.add(obj.getItemCode());
                row.add(obj.getItemName());
                row.add(obj.getSupCode() + "-" + obj.getSupName());
                row.add(obj.getUnit());
                row.add(obj.getPrice());
                row.add(obj.isSupplying());
                data.add(row);
            }
        }
        DefaultTableModel model = (DefaultTableModel) tblItem.getModel();
        model.setDataVector(data, header);

    }
    
    public void loadCbxSupplier(){
        listSupplier = SupplierDAO.getSupname();
        listCodeOfSupplier = SupplierDAO.getSupcode();
        cbxSupplier.removeAllItems();
        for (String object : listSupplier) {
            cbxSupplier.addItem(object);
        }
    }
    
    
    private void setEnable(){
        txtItemCode.setEnabled(true);
        txtItemName.setEnabled(true);
        txtPrice.setEnabled(true);
        txtUnit.setEnabled(true);
        checkBox.setEnabled(true);
        cbxSupplier.setEnabled(true);
    }
    
    private void setDisable(){
        txtItemCode.setEnabled(false);
        txtItemName.setEnabled(false);
        txtPrice.setEnabled(false);
        txtUnit.setEnabled(false);
        checkBox.setEnabled(false);
        cbxSupplier.setEnabled(false);
    }
    
    private void clearText(){
        txtItemCode.setText("");
        txtItemName.setText("");
        txtPrice.setText("");
        txtUnit.setText("");
        checkBox.setSelected(false);
    }
    
    private void updateNewItem(String code, String name, String unit, float price, boolean supplying, String supCode) throws SQLException, ClassNotFoundException{
        String sql = "UPDATE tblItems\n" +
                     "SET itemName = '"+name+"', unit = '"+unit+"', price = '"+price+"', supplying = '"+supplying+"', supCode = '"+supCode+"'\n" +
                     "WHERE itemCode = '"+code+"'";
        int result = anhnt.daos.UserDAO.doRecord(sql);
            if(result != 0){
                JOptionPane.showMessageDialog(null, "Save successfully");
                loadItem();
                flag = -1;
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblItem = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtItemCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtItemName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbxSupplier = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtUnit = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        checkBox = new javax.swing.JCheckBox();
        btnAddNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        tblItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblItemMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblItemMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblItem);

        jLabel1.setText("Item Code");

        jLabel2.setText("Item Name");

        jLabel3.setText("Supplier");

        cbxSupplier.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxSupplier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cbxSupplierMouseReleased(evt);
            }
        });
        cbxSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxSupplierActionPerformed(evt);
            }
        });

        jLabel4.setText("Unit");

        jLabel5.setText("Price");

        jLabel6.setText("Supplying");

        btnAddNew.setText("Add New");
        btnAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtItemCode)
                            .addComponent(txtItemName)
                            .addComponent(cbxSupplier, 0, 214, Short.MAX_VALUE)
                            .addComponent(txtUnit)
                            .addComponent(txtPrice))
                        .addGap(39, 39, 39))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnAddNew, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(51, 51, 51)
                                        .addComponent(checkBox)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 34, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cbxSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(checkBox))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddNew)
                            .addComponent(btnSave)
                            .addComponent(btnDelete)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewActionPerformed
        // TODO add your handling code here:
          pos = -1;
          setEnable();
          clearText();
          tblItem.clearSelection();
          btnSave.setEnabled(true);
          btnDelete.setEnabled(false);
        
    }//GEN-LAST:event_btnAddNewActionPerformed

    private void tblItemMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItemMouseReleased
        // TODO add your handling code here:
        pos = tblItem.getSelectedRow();
    }//GEN-LAST:event_tblItemMouseReleased

    private void tblItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItemMouseClicked
        // TODO add your handling code here:
      
        listItem = ItemDAO.getItems();
        int row = tblItem.getSelectedRow();
        txtItemCode.setText("" + listItem.get(row).getItemCode());
        txtItemName.setText("" + listItem.get(row).getItemName());
        int posSupplier = 0;
        for(int i = 0; i < listSupplier.size(); i++)
            if(listItem.get(row).getSupCode().contains(listCodeOfSupplier.get(i)))
                posSupplier = i;
        cbxSupplier.setSelectedIndex(posSupplier);
        txtUnit.setText("" + listItem.get(row).getUnit());
        txtPrice.setText("" + listItem.get(row).getPrice());
        checkBox.setSelected(listItem.get(row).isSupplying());
        setEnable();
        txtItemCode.setEnabled(false);
        btnAddNew.setEnabled(true);
        btnSave.setEnabled(true);
        btnDelete.setEnabled(true);
    }//GEN-LAST:event_tblItemMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        String sql = "";
        float price = 0;
        String code = txtItemCode.getText().trim().replaceAll("//s+", " ");
        
        String name = txtItemName.getText().trim().replaceAll("//s+", " ");
    
        String unit = txtUnit.getText().trim().replaceAll("//s+", " ");
        
        try {
            price = Float.parseFloat(txtPrice.getText().trim().replaceAll("//s+", " "));
        } catch (Exception e) {
            MyLog.writeLog(e.getMessage(), LOG_NAME);
            JOptionPane.showMessageDialog(null, "Please input float number");
        }
        
        boolean supplying = checkBox.isSelected();
        int supplier = cbxSupplier.getSelectedIndex();
        String supCode = listCodeOfSupplier.get(supplier);
        
        if(pos== -1){ //add new
            try {
               
                System.out.println(name + " - " + unit + " - " + code);
                if(!code.isEmpty() && !name.isEmpty() && !unit.isEmpty() && price > 0){
                  
                    sql = "INSERT tblItems(itemCode, itemName, unit, price, supplying, supCode)\n" +
                          "VALUES ('"+code+"', '"+name+"', '"+unit+"', '"+price+"', '"+supplying+"', '"+supCode+"')";
                     
                    int result = UserDAO.doRecord(sql);
                   
                    if(result != 0){
                        JOptionPane.showMessageDialog(null, "Save sucessfully");
                        loadItem();
                        clearText();
                        setEnable();
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Please fill out full infomation of item");
                }
            } catch (Exception e) {
                if(e.getMessage().contains("duplicate key")){
                    MyLog.writeLog(e.getMessage(), LOG_NAME);
                    JOptionPane.showMessageDialog(null, "The code of item is duplicate");
                }
            }
        }else{
            try {
                if(!name.isEmpty() && !unit.isEmpty() && price > 0){
                    updateNewItem(code, name, unit, price, supplying, supCode);
                    clearText();
                    setEnable();
                }else{
                    JOptionPane.showMessageDialog(null, "Please fill out full infomation of item");
                }
            } catch (Exception e) {
                MyLog.writeLog(e.getMessage(), LOG_NAME);
                JOptionPane.showMessageDialog(null, e);
            }
        }
       
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
            if(pos >= 0){
                String[] options = {"Accept", "Cancel"};
                int ans = JOptionPane.showOptionDialog(null, "Are you sure to delete", "Alert!", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
                if(ans == 0){
                    try {
                        String sql = "DELETE tblItems\n" +
                                     "WHERE itemCode = '"+txtItemCode.getText()+"'";
                        int result = UserDAO.doRecord(sql);
                        if(result != 0){
                            JOptionPane.showMessageDialog(null, "Deleted successfully");
                            pos = -1;
                            tblItem.clearSelection();
                            clearText();
                            loadItem();
                            txtItemCode.setEnabled(true);
                            btnAddNew.setEnabled(true);
                            btnSave.setEnabled(true);
                            btnDelete.setEnabled(true);
                        }
                    } catch (Exception e) {
                        MyLog.writeLog(e.getMessage(), LOG_NAME);
                        JOptionPane.showMessageDialog(null, e);
                    }
                }
            }else JOptionPane.showMessageDialog(null, "Please choose item");
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void cbxSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxSupplierActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_cbxSupplierActionPerformed

    private void cbxSupplierMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbxSupplierMouseReleased
        // TODO add your handling code here:
        loadCbxSupplier();
    }//GEN-LAST:event_cbxSupplierMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNew;
    public javax.swing.JButton btnDelete;
    public javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cbxSupplier;
    private javax.swing.JCheckBox checkBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblItem;
    private javax.swing.JTextField txtItemCode;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtUnit;
    // End of variables declaration//GEN-END:variables
}
